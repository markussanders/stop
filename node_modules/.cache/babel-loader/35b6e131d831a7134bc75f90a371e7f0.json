{"ast":null,"code":"var _jsxFileName = \"/Users/markussanders/Development/WebPortfolio/stop/src/components/Timer.js\";\nimport React, { Component } from 'react';\nexport default class Timer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      running: false,\n      times: [0, 0, 0],\n      time: null\n    };\n    this.reset();\n  }\n\n  reset() {\n    const times = [0, 0, 0];\n    this.setState({\n      times\n    });\n    this.props.handleScore('');\n  }\n\n  start() {\n    if (!this.state.time) this.setState({\n      time: performance.now()\n    });\n\n    if (!this.state.running) {\n      this.setState({\n        running: true\n      });\n      requestAnimationFrame(() => this.step(this.state.time));\n    }\n  }\n\n  stop() {\n    this.setState({\n      running: false,\n      time: null\n    });\n    const formattedTime = this.format(this.state.times);\n    this.props.handleScore(formattedTime);\n  }\n\n  step(timestamp) {\n    if (!this.state.running) return;\n    this.calculate(timestamp);\n    this.setState({\n      time: timestamp\n    });\n    requestAnimationFrame(() => this.step(timestamp));\n  }\n\n  calculate(timestamp) {\n    let times = this.state.times;\n    setInterval(() => {\n      times[2] === 1000 ? times[2] = 0 : times[2] += 1;\n    }, 1);\n\n    if (times[2] >= 100) {\n      times[1] += 1;\n    }\n\n    if (times[1] >= 60) {\n      times[0] += 1;\n      times[1] -= 60;\n    }\n\n    if (times[0]) this.setState({\n      times\n    });\n  }\n\n  format(times) {\n    const pad = (value, count, ms = undefined) => {\n      let result = value.toString();\n\n      for (let i; result.length < count; --count) {\n        if (ms) result += '0';\n        result = '0' + result;\n      }\n\n      return result;\n    };\n\n    return `${pad(times[0], 2)}:${pad(times[1], 2)}:${pad(times[2], 2, true)}`;\n  }\n\n  handleKeyDown(event) {\n    if (event.keyCode === 32) {\n      if (this.state.running) {\n        if (this.state.times[2] > 0) {\n          this.stop();\n          this.props.handleAction('reset');\n        } else {\n          this.reset();\n          this.props.handleAction('start');\n        }\n      } else if (!this.state.running) {\n        if (this.state.times[2] > 0) {\n          this.reset();\n          this.props.handleAction('start');\n        } else {\n          this.start();\n          this.props.handleAction('stop');\n        }\n      }\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"hero-body\",\n      onKeyDown: event => this.handleKeyDown(event),\n      tabIndex: -1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container has-text-centered\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"title is-centered\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"title timer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, this.format(this.state.times)))));\n  }\n\n}","map":{"version":3,"sources":["/Users/markussanders/Development/WebPortfolio/stop/src/components/Timer.js"],"names":["React","Component","Timer","constructor","props","state","running","times","time","reset","setState","handleScore","start","performance","now","requestAnimationFrame","step","stop","formattedTime","format","timestamp","calculate","setInterval","pad","value","count","ms","undefined","result","toString","i","length","handleKeyDown","event","keyCode","handleAction","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nexport default class Timer extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            running: false,\n            times: [0, 0, 0],\n            time: null,\n        }\n        this.reset();\n    }\n\n    reset() {\n        const times = [0, 0, 0];\n        this.setState({ times });\n        this.props.handleScore('');\n    }\n\n    start() {\n        if (!this.state.time) this.setState({time: performance.now()});\n        if (!this.state.running) {\n            this.setState({running: true});\n            requestAnimationFrame(() => this.step(this.state.time));\n        }\n    }\n\n    stop() {\n        this.setState({\n            running: false,\n            time: null,\n        });\n        const formattedTime = this.format(this.state.times);\n        this.props.handleScore(formattedTime);\n    }\n\n    step(timestamp) {\n        if (!this.state.running) return;\n        this.calculate(timestamp);\n        this.setState({ time: timestamp });\n        requestAnimationFrame(() => this.step(timestamp));\n    }\n    \n    calculate(timestamp) {\n        let times = this.state.times;\n        \n        setInterval(() => {\n            times[2] === 1000 ? times[2] = 0 : times[2] += 1;\n        }, 1)\n\n        if (times[2] >= 100) {\n            times[1] += 1;\n        }\n        \n        if (times[1] >= 60) {\n            times[0] += 1;\n            times[1] -= 60;\n        }\n\n        if (times[0] )\n        this.setState({ times });\n    }\n\n    format(times) {\n        const pad = (value, count, ms=undefined) => {\n            let result = value.toString();\n            for (let i; result.length < count; --count) {\n                if (ms) result += '0';\n                result = '0' + result;\n            }\n            return result;\n        }\n        return `${pad(times[0], 2)}:${pad(times[1], 2)}:${pad(times[2], 2, true)}`;\n    }\n\n    handleKeyDown(event) {\n        if (event.keyCode === 32) {\n            if (this.state.running) {\n                if (this.state.times[2] > 0 ) {\n                    this.stop();\n                    this.props.handleAction('reset');\n                } else {\n                    this.reset();\n                    this.props.handleAction('start');\n                }\n            } else if (!this.state.running) {\n                if (this.state.times[2] > 0) {\n                    this.reset();\n                    this.props.handleAction('start');\n                } else {\n                    this.start();\n                    this.props.handleAction('stop');\n                }\n            }\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"hero-body\"\n            onKeyDown={event => this.handleKeyDown(event)}\n            tabIndex={-1}>\n                <div className=\"container has-text-centered\">\n                    <div className=\"title is-centered\">\n                        <h2 className=\"title timer\">\n                            {this.format(this.state.times)}\n                        </h2>\n                    </div>\n                </div>\n            </div>\n        ) \n    }\n    \n\n    \n}\n"]},"metadata":{},"sourceType":"module"}