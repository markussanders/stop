{"ast":null,"code":"var _jsxFileName = \"/Users/markussanders/Development/WebPortfolio/stop/src/components/Cue.js\";\nimport React, { Component } from 'react';\nexport default class Cue extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: 0,\n      message: '',\n      color: '',\n      visualCues: this.props.visualCues\n    };\n  }\n\n  incrementCount() {\n    setInterval(() => {\n      return this.state.count < 110 ? this.setState({\n        count: this.state.count + 10\n      }) : null;\n    }, 1000);\n  }\n\n  listenColorChange() {\n    setInterval(() => {\n      this.handleColorChange();\n    }, 1000);\n  }\n\n  handleColorChange() {\n    let count = this.state.count;\n    let color = '';\n    let message = '';\n\n    if (count <= 30) {\n      color = 'progress is-danger';\n      message = 'Keep going...';\n    } else if (count > 30 && count <= 60) {\n      color = 'progress is-warning';\n      message = 'Almost...';\n    } else if (count > 60 && count <= 90) {\n      color = 'progress is-primary';\n      message = 'Get ready...';\n    } else if (count === 100) {\n      color = 'progress is-success shake';\n    } else if (count > 100) {\n      color = 'progress is-danger shake';\n    } else {\n      color = 'progress is-dark';\n    }\n\n    this.setState({\n      color,\n      message\n    });\n  }\n\n  componentDidMount() {\n    this.incrementCount();\n    this.listenColorChange();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"column has-text-centered\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(\"progress\", {\n      className: this.state.color,\n      value: `${this.state.count}`,\n      max: \"100\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, `${this.state.count}%`));\n  }\n\n}","map":{"version":3,"sources":["/Users/markussanders/Development/WebPortfolio/stop/src/components/Cue.js"],"names":["React","Component","Cue","constructor","props","state","count","message","color","visualCues","incrementCount","setInterval","setState","listenColorChange","handleColorChange","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,eAAe,MAAMC,GAAN,SAAkBD,SAAlB,CAA4B;AACvCE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,CADE;AAETC,MAAAA,OAAO,EAAE,EAFA;AAGTC,MAAAA,KAAK,EAAE,EAHE;AAITC,MAAAA,UAAU,EAAE,KAAKL,KAAL,CAAWK;AAJd,KAAb;AAMH;;AAEDC,EAAAA,cAAc,GAAG;AACbC,IAAAA,WAAW,CAAC,MAAM;AACd,aAAO,KAAKN,KAAL,CAAWC,KAAX,GAAmB,GAAnB,GAAyB,KAAKM,QAAL,CAAc;AAACN,QAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KAAX,GAAmB;AAA3B,OAAd,CAAzB,GAAyE,IAAhF;AACH,KAFU,EAER,IAFQ,CAAX;AAGH;;AAEDO,EAAAA,iBAAiB,GAAG;AAChBF,IAAAA,WAAW,CAAC,MAAM;AACd,WAAKG,iBAAL;AACH,KAFU,EAER,IAFQ,CAAX;AAGH;;AAEDA,EAAAA,iBAAiB,GAAG;AAChB,QAAIR,KAAK,GAAG,KAAKD,KAAL,CAAWC,KAAvB;AACA,QAAIE,KAAK,GAAG,EAAZ;AACA,QAAID,OAAO,GAAG,EAAd;;AACA,QAAID,KAAK,IAAI,EAAb,EAAiB;AACbE,MAAAA,KAAK,GAAG,oBAAR;AACAD,MAAAA,OAAO,GAAG,eAAV;AACH,KAHD,MAGO,IAAID,KAAK,GAAG,EAAR,IAAcA,KAAK,IAAI,EAA3B,EAA+B;AAClCE,MAAAA,KAAK,GAAG,qBAAR;AACAD,MAAAA,OAAO,GAAG,WAAV;AACH,KAHM,MAGA,IAAID,KAAK,GAAG,EAAR,IAAcA,KAAK,IAAI,EAA3B,EAA+B;AAClCE,MAAAA,KAAK,GAAG,qBAAR;AACAD,MAAAA,OAAO,GAAG,cAAV;AACH,KAHM,MAGA,IAAID,KAAK,KAAK,GAAd,EAAmB;AACtBE,MAAAA,KAAK,GAAG,2BAAR;AACH,KAFM,MAEA,IAAIF,KAAK,GAAG,GAAZ,EAAiB;AACpBE,MAAAA,KAAK,GAAG,0BAAR;AACH,KAFM,MAEA;AACHA,MAAAA,KAAK,GAAG,kBAAR;AACH;;AACD,SAAKI,QAAL,CAAc;AAAEJ,MAAAA,KAAF;AAASD,MAAAA;AAAT,KAAd;AACH;;AAEDQ,EAAAA,iBAAiB,GAAG;AAChB,SAAKL,cAAL;AACA,SAAKG,iBAAL;AACH;;AAEDG,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAU,MAAA,SAAS,EAAE,KAAKX,KAAL,CAAWG,KAAhC;AAAuC,MAAA,KAAK,EAAG,GAAE,KAAKH,KAAL,CAAWC,KAAM,EAAlE;AAAqE,MAAA,GAAG,EAAC,KAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiF,GAAE,KAAKD,KAAL,CAAWC,KAAM,GAApG,CAFJ,CADJ;AAMH;;AA1DsC","sourcesContent":["import React, { Component } from 'react'\n\nexport default class Cue extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            count: 0,\n            message: '',\n            color: '',\n            visualCues: this.props.visualCues\n        }\n    }\n\n    incrementCount() {\n        setInterval(() => {\n            return this.state.count < 110 ? this.setState({count: this.state.count + 10}) : null;\n        }, 1000)\n    }\n\n    listenColorChange() {\n        setInterval(() => {\n            this.handleColorChange();\n        }, 1000);\n    }\n\n    handleColorChange() {\n        let count = this.state.count;\n        let color = '';\n        let message = '';\n        if (count <= 30) {\n            color = 'progress is-danger';\n            message = 'Keep going...'\n        } else if (count > 30 && count <= 60) {\n            color = 'progress is-warning';\n            message = 'Almost...'\n        } else if (count > 60 && count <= 90) {\n            color = 'progress is-primary';\n            message = 'Get ready...';\n        } else if (count === 100) {\n            color = 'progress is-success shake';\n        } else if (count > 100) {\n            color = 'progress is-danger shake';\n        } else {\n            color = 'progress is-dark';\n        }\n        this.setState({ color, message })\n    }\n\n    componentDidMount() {\n        this.incrementCount();\n        this.listenColorChange();\n    }\n\n    render() {\n        return (\n            <div className=\"column has-text-centered\">\n                <br/>\n                <progress className={this.state.color} value={`${this.state.count}`} max=\"100\">{`${this.state.count}%`}</progress>\n            </div>\n        )\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}