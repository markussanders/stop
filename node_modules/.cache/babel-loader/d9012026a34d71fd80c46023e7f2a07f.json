{"ast":null,"code":"var _jsxFileName = \"/Users/markussanders/Development/WebPortfolio/stop/src/components/About.js\";\nimport React from 'react';\n\nconst About = props => {\n  return React.createElement(\"div\", {\n    className: \"modal is-active\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"about-background\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"modal-content modal-difficulty about-text has-text-centered\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, \"ABOUT\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, \"STOP was inspired by a game in a Chinatown cafe in which you can win a free boba/milk tea if you score `10.000` seconds on a blind timer. What makes this seemingly-simple task so difficult is the struggle of internalizing steady rhythmn. In order to get better at this, I created four modes: \\\"easy\\\" \\u2013\\u2013 where visual cues are displayed to signify each second, \\\"medium\\\" \\u2013\\u2013 in which cues are only given at the start of the timer, \\\"hard\\\" \\u2013\\u2013 where no cues are shown and \\\"impossible\\\" \\u2013\\u2013 similar to \\\"hard\\\" in which there are no audio cues provided, however, unlike the previous three modes in which achieving 10 seconds suffices a 'win', users must achieve a perfect \\\"10.000\\\".\"), React.createElement(\"button\", {\n    className: \"modal-close is-large\",\n    \"aria-label\": \"close\",\n    onClick: () => props.toggleAbout(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  })));\n};\n\nexport default About;","map":{"version":3,"sources":["/Users/markussanders/Development/WebPortfolio/stop/src/components/About.js"],"names":["React","About","props","toggleAbout"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAGA,MAAMC,KAAK,GAAGC,KAAK,IAAI;AAEnB,SACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAK,IAAA,SAAS,EAAC,6DAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wtBAHJ,EAYA;AAAQ,IAAA,SAAS,EAAC,sBAAlB;AAAyC,kBAAW,OAApD;AAA4D,IAAA,OAAO,EAAE,MAAMA,KAAK,CAACC,WAAN,EAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZA,CAFJ,CADJ;AAmBH,CArBD;;AAuBA,eAAeF,KAAf","sourcesContent":["import React from 'react';\n\n\nconst About = props => {\n\n    return (\n        <div className=\"modal is-active\">\n            <div className=\"about-background\"></div>\n            <div className=\"modal-content modal-difficulty about-text has-text-centered\">\n                <h2>ABOUT</h2>\n                <br/>\n                <p>\n                    STOP was inspired by a game in a Chinatown cafe in which you can win a free boba/milk tea if you\n                    score `10.000` seconds on a blind timer. What makes this seemingly-simple task so difficult is \n                    the struggle of internalizing steady rhythmn. In order to get better at this, I created four modes:\n                    \"easy\" –– where visual cues are displayed to signify each second, \"medium\" –– in which cues are only\n                    given at the start of the timer, \"hard\" –– where no cues are shown and \"impossible\" –– similar to \"hard\"\n                    in which there are no audio cues provided, however, unlike the previous three modes in which achieving\n                    10 seconds suffices a 'win', users must achieve a perfect \"10.000\".\n                </p>\n            <button className=\"modal-close is-large\" aria-label=\"close\" onClick={() => props.toggleAbout()}></button>\n            </div>\n        </div>\n    )\n}\n\nexport default About;"]},"metadata":{},"sourceType":"module"}